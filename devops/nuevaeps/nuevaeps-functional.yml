# RUPET Pipeline
# The TIA - Team!

steps:

- task: Xther-Deployment@0  
  inputs:
    installDir: '$(Build.SourcesDirectory)/xther/'
    resources: 'CHR'
  displayName: 'XTHER install'

- task: PowerShell@2
  inputs:    
    targetType: 'inline'
    script: |
      $cliEnv = 'mac'
      if ('$(Agent.OS)' -eq 'Windows_NT')
      {
        $cliEnv = 'win'
      }
      if ('$(Agent.OS)' -eq 'Linux')
      {
        $cliEnv = 'linux'
      }
      $destinationFolder = "$(Build.SourcesDirectory)/aimaps/aimaps/selenium/"
      if (!(Test-Path -path $destinationFolder)) {New-Item $destinationFolder -Type Directory}
      Copy-Item '$(Build.SourcesDirectory)/xther/*' $destinationFolder -Force -Recurse
  displayName: 'Install drivers'

- task: PowerShell@2
  condition: eq(variables['Agent.OS'], 'Darwin')
  inputs:    
    targetType: 'inline'
    script: |
      chmod 777 '$(Build.SourcesDirectory)/aimpas/aimaps_cli/mac/selenium/chromedriver'
      dotnet aimaps/aimaps_cli/mac/Gsqa.Tools.AiMaps.Console.dll src='$(Build.SourcesDirectory)/maps/nuevaEPs/NuevaEPS.aiml'
  displayName: 'Running robots - MAC'

- task: PowerShell@2
  condition: eq(variables['Agent.OS'], 'Linux')
  inputs:    
    targetType: 'inline'
    script: |
      chmod 777 '$(Build.SourcesDirectory)/aimaps/aimaps_cli/linux/selenium/chromedriver'
      chmod 777 aimaps/aimaps_cli/linux/Gsqa.Tools.AiMaps.Console.dll
      dotnet aimaps/aimaps_cli/linux/Gsqa.Tools.AiMaps.Console.dll src='$(Build.SourcesDirectory)/maps/nuevaEPs/NuevaEPS.aiml'
  displayName: 'Running robots - Linux'

- task: CmdLine@2
  condition: eq(variables['Agent.OS'], 'Windows_NT')
  inputs:
    script: |
      cd $(Build.SourcesDirectory)\aimaps\aimaps\
      dir
      AiMap.Console.exe src="$(Build.SourcesDirectory)\maps\nuevaeps\NuevaEPS.aiml"
  displayName: 'Running robots - WIN'